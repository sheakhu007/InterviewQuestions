1. What does SQL stand for, and what is its primary purpose?
   - SQL stands for Structured Query Language, and its primary purpose is to manage and manipulate relational databases.

2. Describe the structure of a SQL query.
   - A SQL query generally has the structure: SELECT [columns] FROM [table] WHERE [conditions].

3. How do you retrieve unique records from a table?
   - To retrieve unique records from a table, use the DISTINCT keyword: SELECT DISTINCT column_name FROM table_name.

4. Explain the difference between CHAR and VARCHAR.
   - CHAR is a fixed-length string, while VARCHAR is a variable-length string.

5. Can you store a number in a VARCHAR column? Why or why not?
   - Yes, you can store numbers in a VARCHAR column, but itâ€™s not ideal because VARCHAR is meant for strings. Numeric operations on it may fail or require conversion.

6. What happens if you try to insert a NULL value into a column defined as NOT NULL?
   - If you try to insert a NULL value into a column defined as NOT NULL, the insert operation will fail, and an error will be thrown.

7. Explain the role of the WHERE clause in a SQL query.
   - The WHERE clause filters records that meet specific conditions.

8. What is the function of the GROUP BY clause?
   - GROUP BY groups rows sharing a property and aggregates results.

9. What does the HAVING clause do, and how is it different from WHERE?
   - The HAVING clause filters groups after the GROUP BY, whereas WHERE filters rows before grouping.

10. How do you sort the results of a query in ascending or descending order?
   - Use ORDER BY to sort results in ascending (ASC) or descending (DESC) order.

11. What is a primary key, and why is it important?
   - A primary key uniquely identifies each record in a table and ensures uniqueness.

12. Can a table have more than one primary key? Why or why not?
   - A table can only have one primary key, which may consist of multiple columns (composite key).

13. What is a foreign key, and how does it work?
   - A foreign key links a column in one table to a primary key in another table, ensuring referential integrity.

14. What is the purpose of the AUTO_INCREMENT attribute?
   - AUTO_INCREMENT automatically generates a unique number for each new record.

15. How do you retrieve the first record from a query result?
   - Use LIMIT 1 or FETCH FIRST 1 ROW to retrieve the first record.

16. What is a JOIN, and why would you use it?
   - A JOIN combines rows from two or more tables based on related columns.

17. How do you find the total number of rows in a table?
   - To count rows, use SELECT COUNT(*) FROM table_name.

18. Explain the difference between INNER JOIN and OUTER JOIN.
   - An INNER JOIN returns rows when there's a match in both tables, while OUTER JOIN returns matched and unmatched rows.

19. What is a self-join, and when would you use it?
   - A self-join joins a table with itself, typically for hierarchical data.

20. How do you filter records that match multiple conditions?
   - Use AND and OR to filter records matching multiple conditions in the WHERE clause.

21. What is a subquery, and how is it used?
   - A subquery is a query within a query, used to fetch intermediate results.

22. How can you update data in a table?
   - Update data using the UPDATE statement: UPDATE table_name SET column1 = value1 WHERE condition.

23. What is the difference between DELETE, TRUNCATE, and DROP?
   - DELETE removes rows, TRUNCATE removes all rows but keeps structure, DROP removes the table entirely.

24. How do you remove duplicate rows from a result set?
   - Remove duplicates using SELECT DISTINCT.

25. What is the use of the DISTINCT keyword?
   - DISTINCT ensures unique values in a query result.

26. How do you perform a case-insensitive search in SQL?
   - For case-insensitive search, use ILIKE in some databases or LOWER().

27. Explain the difference between UNION and UNION ALL.
   - UNION combines results of two queries, removing duplicates; UNION ALL keeps duplicates.

28. What is the purpose of the LIMIT clause?
   - The LIMIT clause limits the number of records returned.

29. How do you calculate the average value of a column?
   - Use AVG(column_name) to calculate the average.

30. How do you find the maximum or minimum value in a column?
   - Use MAX() or MIN() to find the maximum or minimum value.

31. What does the LIKE operator do?
   - The LIKE operator searches for a specified pattern in a column.

32. How do you implement pagination in a SQL query?
   - Implement pagination with LIMIT and OFFSET in a SQL query.

33. What is the IN operator, and how is it used?
   - The IN operator filters records matching any value in a list.

34. How do you check if a column contains a specific value?
   - Use the WHERE clause to check if a column contains a specific value.

35. What are aggregate functions, and can you name a few?
   - Aggregate functions perform calculations on a set of values, e.g., COUNT, SUM, AVG.

36. How do you count the number of distinct entries in a column?
   - Use COUNT(DISTINCT column) to count distinct entries.

37. What is the function of the CASE statement in SQL?
   - The CASE statement is used for conditional logic in SQL.

38. How can you convert data types in SQL?
   - Use CAST() or CONVERT() to convert data types in SQL.

39. What is the purpose of the COALESCE function?
   - COALESCE returns the first non-NULL value in a list.

40. How do you use the EXISTS keyword in a query?
   - EXISTS returns true if a subquery returns any records.
41. What are temporary tables, and when would you use them?
   - Temporary tables are used to store intermediate results temporarily for the duration of a session. They are useful in complex queries that need to break down processing steps.

42. How do you create a view in SQL?
   - Use the CREATE VIEW statement: CREATE VIEW view_name AS SELECT columns FROM table_name.

43. What is the difference between a view and a table?
   - A table is a stored dataset, while a view is a virtual table created from a SQL query.

44. Can you update a view? If so, how?
   - Yes, a view can be updated if it is based on a single table and does not involve any aggregate functions or complex joins.

45. What are indexes, and how do they improve performance?
   - Indexes are data structures that help speed up data retrieval by providing fast access to rows in a table.

46. How do you create an index on a table?
   - Use CREATE INDEX: CREATE INDEX index_name ON table_name (column_name).

47. What is a composite key, and when would you use it?
   - A composite key consists of two or more columns that together uniquely identify a record. It is used when no single column can serve as a unique identifier.

48. What is normalization, and why is it important?
   - Normalization is the process of organizing data to reduce redundancy and improve data integrity.

49. What is denormalization, and when might you consider it?
   - Denormalization is the process of combining tables to improve read performance, often used in analytical systems.

50. How do you retrieve records from multiple tables?
   - You can retrieve records from multiple tables using JOINs or UNIONs.

51. What does the NOW() function do in SQL?
   - The NOW() function returns the current date and time.

52. Explain the difference between ROUND() and FLOOR().
   - ROUND() rounds a number to the nearest integer, while FLOOR() rounds down to the nearest integer.

53. What is a transaction in SQL, and why is it important?
   - A transaction is a sequence of operations that are executed as a single unit of work, ensuring data integrity.

54. What are the properties of transactions (ACID)?
   - ACID stands for Atomicity, Consistency, Isolation, Durability, which ensure reliable transactions.

55. How do you roll back a transaction?
   - Use the ROLLBACK command to undo a transaction.

56. How do you create a stored procedure in SQL?
   - Use CREATE PROCEDURE: CREATE PROCEDURE proc_name AS BEGIN SQL_statements END.

57. What is the purpose of a trigger in SQL?
   - A trigger automatically executes a specified set of SQL commands when a certain event occurs on a table.

58. How do you handle errors in SQL?
   - Use error handling mechanisms like TRY...CATCH blocks in databases like SQL Server.

59. What is a materialized view, and how does it differ from a regular view?
   - A materialized view stores the result of a query physically, unlike a regular view which is just a stored query.

60. How do you determine the current database in SQL?
   - Use SELECT DATABASE(); in MySQL or equivalent commands in other databases.

61. What is the difference between GROUP BY and ORDER BY?
   - GROUP BY groups rows with the same values into summary rows, while ORDER BY sorts the result set.

62. What does the OFFSET keyword do in SQL?
   - OFFSET skips a specified number of rows before returning the result set.

63. How do you convert a string to uppercase in SQL?
   - Use the UPPER() function: SELECT UPPER(column_name) FROM table_name.

64. What is the TRIM() function used for?
   - TRIM() removes leading and trailing spaces from a string.

65. How can you retrieve the last 10 records from a table?
   - Use ORDER BY column DESC LIMIT 10 to retrieve the last 10 records.

66. How do you fetch records based on a date range?
   - Use the WHERE clause with BETWEEN: SELECT * FROM table_name WHERE date_column BETWEEN 'start_date' AND 'end_date'.

67. What does the CAST() function do?
   - CAST() converts a value from one data type to another.

68. Explain the use of the RANK() function.
   - The RANK() function assigns a rank to each row within a partition, with possible gaps in the ranking.

69. What is the difference between RANK() and DENSE_RANK()?
   - RANK() leaves gaps in the ranking when there are ties, while DENSE_RANK() does not.

70. How do you implement error handling in stored procedures?
   - Use TRY...CATCH blocks or other error-handling mechanisms supported by the database.

71. What is the difference between a local and a global temporary table?
   - A local temporary table is visible only to the session that created it, while a global temporary table is visible to all sessions.

72. How do you calculate the percentage of total in SQL?
   - Use a calculation like: SELECT (column_value / total_value) * 100 AS percentage.

73. What is a derived table, and how is it created?
   - A derived table is a subquery that is used in the FROM clause, and it behaves like a temporary table.

74. How can you use window functions in SQL?
   - Window functions like ROW_NUMBER() and RANK() can be used to perform calculations across a set of rows related to the current row.

75. What is the purpose of the FIND_IN_SET() function in MySQL?
   - FIND_IN_SET() returns the position of a string within a list of strings.

76. How do you find the difference between two dates in SQL?
   - Use the DATEDIFF() function to find the difference between two dates.

77. What are some common SQL functions for string manipulation?
   - Common functions include CONCAT(), SUBSTRING(), LENGTH(), and REPLACE().

78. How do you check if a table exists in a database?
   - Use a query like: SELECT * FROM information_schema.tables WHERE table_name = 'your_table'.

79. What is a GROUP_CONCAT() function?
   - GROUP_CONCAT() concatenates values from multiple rows into a single string.

80. How can you implement a full-text search in SQL?
   - Use FULLTEXT indexes and queries like MATCH()...AGAINST() in databases that support full-text search.

81. How do you check for the existence of a record using a subquery?
   - Use EXISTS with a subquery: SELECT 1 WHERE EXISTS (SELECT * FROM table_name WHERE condition).

82. What is a horizontal vs. vertical join?
   - Horizontal joins combine rows, while vertical joins combine columns (e.g., UNION for vertical joins).

83. How do you update records based on a condition?
   - Use UPDATE with the WHERE clause: UPDATE table_name SET column_name = value WHERE condition.

84. What is a cross join, and how does it differ from other joins?
   - A cross join returns the Cartesian product of two tables, without any condition or match, unlike inner or outer joins.

85. How do you drop a table from a database?
   - Use DROP TABLE table_name to remove a table from the database.

86. What is a recursive query, and when would you use it?
   - A recursive query repeatedly references itself, useful for hierarchical data such as organizational charts.

87. How do you use the SUBSTRING() function?
   - Use SUBSTRING() to extract a part of a string: SELECT SUBSTRING(column, start, length) FROM table_name.

88. How do you find duplicate rows based on multiple columns?
   - Use GROUP BY with HAVING COUNT(*) > 1 to find duplicate rows.

89. What is a batch processing in SQL?
   - Batch processing allows running a set of SQL commands in a sequence as part of a single job.

90. How can you use the INDEX keyword in a query?
   - You can use INDEX to hint the database engine to use a specific index for query optimization.

91. What is the difference between static and dynamic SQL?
   - Static SQL is predefined and does not change, while dynamic SQL is generated and executed at runtime.

92. How do you implement a check constraint in SQL?
   - Use the CHECK constraint to enforce a condition on column values: CREATE TABLE table_name (column_name INT CHECK (column_name > 0)).

93. What is the significance of the EXEC keyword in SQL Server?
   - EXEC is used to execute a stored procedure or dynamic SQL in SQL Server.

94. How do you list all the columns in a table?
   - Use the query: SELECT column_name FROM information_schema.columns WHERE table_name = 'your_table'.

95. What is a schema in SQL?
   - A schema is a collection of database objects, such as tables and views, that define the structure of the database.

96. How can you create a backup of a database?
   - Use database-specific commands, such as mysqldump in MySQL or BACKUP DATABASE in SQL Server.

97. What does the SET keyword do in an UPDATE statement?
   - The SET keyword assigns new values to columns in an UPDATE statement.

98. How do you create a function in SQL?
   - Use CREATE FUNCTION: CREATE FUNCTION function_name (parameters) RETURNS data_type AS BEGIN SQL_statements END.

99. How can you store a list of values in a single column?
   - You can store a list of values as a comma-separated string or use JSON or array types depending on the database.

100. How do you delete a column from a table?
   - To delete a column from a table, use the ALTER TABLE statement with the DROP COLUMN clause. For example:

   ALTER TABLE table_name
   DROP COLUMN column_name;

   This will permanently remove the specified column from the table.